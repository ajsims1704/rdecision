line profiling: sample.interval=20000
#File 1: H:/GitHub/rdecision/R/Arborescence.R
#File 2: H:/GitHub/rdecision/R/DecisionTree.R
#File 3: H:/GitHub/rdecision/tests/testthat/test-DecisionTree.R
1#65 "self$is_leaf" 1#111 "FUN" "vapply" 1#110 "self$root_to_leaf_paths" 2#1014 "DT$evaluate" 3#458 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "test_that" 3#252 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "source_file" "force" "with_reporter" "testthat::test_file" 
#File 4: H:/GitHub/rdecision/R/Action.R
"inherits" 4#97 "e$cost" 2#776 "FUN" "vapply" 2#770 "self$evaluate_paths" 2#1022 "FUN" "lapply" 2#1016 "do.call" 2#1016 "DT$evaluate" 3#458 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "test_that" 3#252 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "source_file" "force" "with_reporter" "testthat::test_file" 
2#778 "$" 2#778 "FUN" "vapply" 2#770 "self$evaluate_paths" 2#1022 "FUN" "lapply" 2#1016 "do.call" 2#1016 "DT$evaluate" 3#458 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "test_that" 3#252 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "source_file" "force" "with_reporter" "testthat::test_file" 
#File 5: H:/GitHub/rdecision/R/LeafNode.R
5#82 "v$modvars" 2#238 "FUN" "lapply" "sapply" 2#236 "self$modvars" 2#1018 "FUN" "lapply" 2#1016 "do.call" 2#1016 "DT$evaluate" 3#458 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "test_that" 3#252 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "source_file" "force" "with_reporter" "testthat::test_file" 
#File 6: H:/GitHub/rdecision/R/ExprModVar.R
#File 7: H:/GitHub/rdecision/R/Reaction.R
"all.vars" "lapply" "sapply" 6#108 "vv$operands" "lapply" "sapply" 6#115 "FUN" "lapply" "sapply" 6#108 "v$operands" 7#88 "FUN" "lapply" "sapply" 7#84 "e$modvars" 2#232 "FUN" "lapply" "sapply" 2#230 "self$modvars" 2#1018 "FUN" "lapply" 2#1016 "do.call" 2#1016 "DT$evaluate" 3#458 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "test_that" 3#252 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "source_file" "force" "with_reporter" "testthat::test_file" 
#File 8: H:/GitHub/rdecision/R/Digraph.R
"%in%" "deparse" "paste" "force" "as.data.frame.numeric" "as.data.frame" "data.frame" 8#352 "self$walk" 2#770 "vapply" 2#770 "self$evaluate_paths" 2#1022 "FUN" "lapply" 2#1016 "do.call" 2#1016 "DT$evaluate" 3#458 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "test_that" 3#252 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "source_file" "force" "with_reporter" "testthat::test_file" 
#File 9: H:/GitHub/rdecision/R/Graph.R
9#84 "self$vertex_index" 2#765 "self$evaluate_paths" 2#1022 "FUN" "lapply" 2#1016 "do.call" 2#1016 "DT$evaluate" 3#458 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "test_that" 3#252 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "source_file" "force" "with_reporter" "testthat::test_file" 
8#340 "$" 8#340 "FUN" "vapply" 8#338 "self$walk" 2#770 "vapply" 2#770 "self$evaluate_paths" 2#1022 "FUN" "lapply" 2#1016 "do.call" 2#1016 "DT$evaluate" 3#458 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "test_that" 3#252 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "source_file" "force" "with_reporter" "testthat::test_file" 
2#232 "e$modvars" 2#232 "FUN" "lapply" "sapply" 2#230 "self$modvars" 2#1018 "FUN" "lapply" 2#1016 "do.call" 2#1016 "DT$evaluate" 3#458 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "test_that" 3#252 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "source_file" "force" "with_reporter" "testthat::test_file" 
"eval" "eval" 6#357 "hr.LSI$get" "eval" "eval" 6#357 "p.LSI.T$get" "eval" "eval" 6#357 "<Anonymous>" 7#102 "e$p" 2#773 "FUN" "vapply" 2#770 "self$evaluate_paths" 2#1022 "FUN" "lapply" 2#1016 "do.call" 2#1016 "DT$evaluate" 3#458 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "test_that" 3#252 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "source_file" "force" "with_reporter" "testthat::test_file" 
9#83 "self$vertex_index" 8#340 "FUN" "vapply" 8#338 "self$walk" 2#770 "vapply" 2#770 "self$evaluate_paths" 2#1022 "FUN" "lapply" 2#1016 "do.call" 2#1016 "DT$evaluate" 3#458 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "test_that" 3#252 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "source_file" "force" "with_reporter" "testthat::test_file" 
"gsub" 6#348 "<Anonymous>" 7#102 "e$p" 2#773 "FUN" "vapply" 2#770 "self$evaluate_paths" 2#1022 "FUN" "lapply" 2#1016 "do.call" 2#1016 "DT$evaluate" 3#458 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "test_that" 3#252 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "source_file" "force" "with_reporter" "testthat::test_file" 
6#353 "rr.Dermatitis$get" "eval" "eval" 6#357 "p.Dermatitis.T$get" "eval" "eval" 6#357 "<Anonymous>" 7#102 "e$p" 2#773 "FUN" "vapply" 2#770 "self$evaluate_paths" 2#1022 "FUN" "lapply" 2#1016 "do.call" 2#1016 "DT$evaluate" 3#458 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "test_that" 3#252 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "source_file" "force" "with_reporter" "testthat::test_file" 
"Stack$new" 8#304 "self$paths" 1#112 "FUN" "vapply" 1#110 "self$root_to_leaf_paths" 2#686 "lapply" 2#686 "do.call" 2#686 "self$strategy_paths" 2#1029 "DT$evaluate" 3#458 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "test_that" 3#252 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "source_file" "force" "with_reporter" "testthat::test_file" 
2#1036 "$" 2#1036 "FUN" "vapply" 2#1035 "DT$evaluate" 3#458 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "test_that" 3#252 "eval" "eval" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "test_code" "source_file" "force" "with_reporter" "testthat::test_file" 

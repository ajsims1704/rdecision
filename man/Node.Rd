% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Node.R
\docType{class}
\name{Node}
\alias{Node}
\title{Node}
\description{
An R6 class to represent a node in a decision tree
}
\details{
Base class to represent a single node in a decision tree. Non subclassed
nodes are not expected to be created as model objects. Document Object
Model (DOM) names are used for node methods as far as possibe.
}
\author{
Andrew Sims \email{andrew.sims5@nhs.net}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Node$new()}}
\item \href{#method-childNodes}{\code{Node$childNodes()}}
\item \href{#method-hasChildNodes}{\code{Node$hasChildNodes()}}
\item \href{#method-isSameNode}{\code{Node$isSameNode()}}
\item \href{#method-nodeType}{\code{Node$nodeType()}}
\item \href{#method-getLabel}{\code{Node$getLabel()}}
\item \href{#method-getP}{\code{Node$getP()}}
\item \href{#method-getPathway}{\code{Node$getPathway()}}
\item \href{#method-getUtility}{\code{Node$getUtility()}}
\item \href{#method-getCost}{\code{Node$getCost()}}
\item \href{#method-getModelVariables}{\code{Node$getModelVariables()}}
\item \href{#method-tabulateModelVariables}{\code{Node$tabulateModelVariables()}}
\item \href{#method-clone}{\code{Node$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create new Node object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$new()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A new Node object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-childNodes"></a>}}
\if{latex}{\out{\hypertarget{method-childNodes}{}}}
\subsection{Method \code{childNodes()}}{
Return list of child nodes (DOM-style)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$childNodes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
list of child Nodes
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-hasChildNodes"></a>}}
\if{latex}{\out{\hypertarget{method-hasChildNodes}{}}}
\subsection{Method \code{hasChildNodes()}}{
Does the node have any child nodes? (DOM-style)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$hasChildNodes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TRUE if node has children, FALSE if not
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-isSameNode"></a>}}
\if{latex}{\out{\hypertarget{method-isSameNode}{}}}
\subsection{Method \code{isSameNode()}}{
Is this node the same as the argument? (DOM-style)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$isSameNode(otherNode)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{otherNode}}{node to compare with this one}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
TRUE if `otherNode` is also this one
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-nodeType"></a>}}
\if{latex}{\out{\hypertarget{method-nodeType}{}}}
\subsection{Method \code{nodeType()}}{
node type (DOM-style)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$nodeType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Node class, as character string
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getLabel"></a>}}
\if{latex}{\out{\hypertarget{method-getLabel}{}}}
\subsection{Method \code{getLabel()}}{
Return label of edge which links to specified child node
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$getLabel(childNode)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{childNode}}{child node to which find label of linking edge}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
label as character string
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getP"></a>}}
\if{latex}{\out{\hypertarget{method-getP}{}}}
\subsection{Method \code{getP()}}{
Function to return the conditional probability of the edge which links to
the specified child node
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$getP(childNode)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{childNode}}{child node to which to find probability of linking edge}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
numerical value of probability
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getPathway"></a>}}
\if{latex}{\out{\hypertarget{method-getPathway}{}}}
\subsection{Method \code{getPathway()}}{
Function to return the pathway name, if defined
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$getPathway()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Name of pathway (final leaf node), character string
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getUtility"></a>}}
\if{latex}{\out{\hypertarget{method-getUtility}{}}}
\subsection{Method \code{getUtility()}}{
function to return the utility associated with the node
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$getUtility()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Utility, numeric
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getCost"></a>}}
\if{latex}{\out{\hypertarget{method-getCost}{}}}
\subsection{Method \code{getCost()}}{
Function to return the cost of the edge which links to the specified child node
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$getCost(childNode)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{childNode}}{child node to identify edge with associated cost of traversal}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Cost, numerical value
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getModelVariables"></a>}}
\if{latex}{\out{\hypertarget{method-getModelVariables}{}}}
\subsection{Method \code{getModelVariables()}}{
Function to return a list of model variables associated with the node
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$getModelVariables()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List of model variables associated with the node
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-tabulateModelVariables"></a>}}
\if{latex}{\out{\hypertarget{method-tabulateModelVariables}{}}}
\subsection{Method \code{tabulateModelVariables()}}{
Tabulate all model variables associated with this node and its 
descendants.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$tabulateModelVariables()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Data frame with one row per model variable.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Node$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Digraph.R
\docType{class}
\name{Digraph}
\alias{Digraph}
\title{Digraph}
\description{
An R6 class to represent a digraph (a directed graph, from discrete
mathematics).
}
\details{
The types of health economic model supported by `rdecision` are forms of
digraph, insofar as they are a set of objects in which some pairs of objects
are directionally related. in `rdecision` terminology, the objects (vertices) 
are Nodes
and the relationships are directed edges (arrows). Formally, each type of
model is a particular form of digraph, as follows:
\describe{
\item{Markov Model}{A directed multigraph permitting loops (a loop 
multidigraph),
optionally labelled, or 'quiver'. It is a multigraph because there are 
two edges between each pair of nodes {A,B} representing the transition
probabilities from A to B and vice-versa. And it is a directed graph because
the transition probabilities refer to transitions in one direction. Each
edge can be optionally labelled. It permits loops (edges whose source and
target are the same node) to represent patients that remain in the same 
state between cycles.}
\item{DecisionTree}{A k-ary directed rooted tree, or 'arborescence'. This is 
considered a form of directed graph (digraph) by several authors. In 
`rdecision` the root is a DecisionNode and in decision trees used in health
economics there is an implied directionality, from root to leaf nodes.}
}
It is not expected that modellers will create objects of type Digraph
directly. It functions as a base class for the model types supported
by `rdecision`, to provide methods for digraph computation and checking.
}
\author{
Andrew Sims \email{andrew.sims@newcastle.ac.uk}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Digraph$new()}}
\item \href{#method-order}{\code{Digraph$order()}}
\item \href{#method-size}{\code{Digraph$size()}}
\item \href{#method-direct_successors}{\code{Digraph$direct_successors()}}
\item \href{#method-direct_predecessors}{\code{Digraph$direct_predecessors()}}
\item \href{#method-neighbours}{\code{Digraph$neighbours()}}
\item \href{#method-weakly_connected}{\code{Digraph$weakly_connected()}}
\item \href{#method-DFS}{\code{Digraph$DFS()}}
\item \href{#method-clone}{\code{Digraph$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new Graph object from sets of nodes and edges.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Digraph$new(V, E)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{V}}{A list of Nodes.}

\item{\code{E}}{A list of Arrows.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A Digraph object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-order"></a>}}
\if{latex}{\out{\hypertarget{method-order}{}}}
\subsection{Method \code{order()}}{
Return the order of the graph (number of vertices).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Digraph$order()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Order of the graph (integer).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-size"></a>}}
\if{latex}{\out{\hypertarget{method-size}{}}}
\subsection{Method \code{size()}}{
Return the size of the graph (number of edges).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Digraph$size()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Size of the graph (integer).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-direct_successors"></a>}}
\if{latex}{\out{\hypertarget{method-direct_successors}{}}}
\subsection{Method \code{direct_successors()}}{
Find the direct successors of a node.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Digraph$direct_successors(v)}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of nodes or an empty list if the specified
node has no successors.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-direct_predecessors"></a>}}
\if{latex}{\out{\hypertarget{method-direct_predecessors}{}}}
\subsection{Method \code{direct_predecessors()}}{
Find the direct predecessors of a node.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Digraph$direct_predecessors(v)}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of nodes or an empty list if the specified
node has no predecessors.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-neighbours"></a>}}
\if{latex}{\out{\hypertarget{method-neighbours}{}}}
\subsection{Method \code{neighbours()}}{
Find the neigbours of a node.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Digraph$neighbours(v)}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of nodes which are either direct successors or direct
predecessors of the node.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-weakly_connected"></a>}}
\if{latex}{\out{\hypertarget{method-weakly_connected}{}}}
\subsection{Method \code{weakly_connected()}}{
Establish whether the graph is weakly connected, i.e. whether it is
a connected undirected graph.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Digraph$weakly_connected()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TRUE if graph is connected, assuming the edges are undirected.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DFS"></a>}}
\if{latex}{\out{\hypertarget{method-DFS}{}}}
\subsection{Method \code{DFS()}}{
Non-recursive depth-first search. Starts with a specified node and
finds all the nodes reachable from it.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Digraph$DFS(v)}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List of reachable nodes, including self.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Digraph$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}

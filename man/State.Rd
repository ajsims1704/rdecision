% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/State.R
\docType{class}
\name{State}
\alias{State}
\title{State}
\description{
An R6 class for a leaf node in a decision tree representing a clinical state.
}
\details{
A State is a clinical outcome, the end point (leaf node or terminal node)
of a decision tree and the base class for a Markov state. It represents a state of
being, and is associated with an annual cost and an incremental utility. It 
inherits from class Node so that it can be part of a decision tree, either as
a leaf node with no children or a Markov state, in the construction of a 
Markov cycle tree.
}
\author{
Andrew J. Sims \email{andrew.sims5@newcastle.ac.uk}
}
\section{Super class}{
\code{\link[rdecision:Node]{rdecision::Node}} -> \code{State}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{State$new()}}
\item \href{#method-get_name}{\code{State$get_name()}}
\item \href{#method-get_utility}{\code{State$get_utility()}}
\item \href{#method-clone}{\code{State$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="childNodes">}\href{../../rdecision/html/Node.html#method-childNodes}{\code{rdecision::Node$childNodes()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="descendantNodes">}\href{../../rdecision/html/Node.html#method-descendantNodes}{\code{rdecision::Node$descendantNodes()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="get_modvars">}\href{../../rdecision/html/Node.html#method-get_modvars}{\code{rdecision::Node$get_modvars()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="getCost">}\href{../../rdecision/html/Node.html#method-getCost}{\code{rdecision::Node$getCost()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="getLabel">}\href{../../rdecision/html/Node.html#method-getLabel}{\code{rdecision::Node$getLabel()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="getP">}\href{../../rdecision/html/Node.html#method-getP}{\code{rdecision::Node$getP()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="getPathways">}\href{../../rdecision/html/Node.html#method-getPathways}{\code{rdecision::Node$getPathways()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="getUtility">}\href{../../rdecision/html/Node.html#method-getUtility}{\code{rdecision::Node$getUtility()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="hasChildNodes">}\href{../../rdecision/html/Node.html#method-hasChildNodes}{\code{rdecision::Node$hasChildNodes()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="isSameNode">}\href{../../rdecision/html/Node.html#method-isSameNode}{\code{rdecision::Node$isSameNode()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="nodeType">}\href{../../rdecision/html/Node.html#method-nodeType}{\code{rdecision::Node$nodeType()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="sample_modvars">}\href{../../rdecision/html/Node.html#method-sample_modvars}{\code{rdecision::Node$sample_modvars()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="tabulate_modvars">}\href{../../rdecision/html/Node.html#method-tabulate_modvars}{\code{rdecision::Node$tabulate_modvars()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="updateEdges">}\href{../../rdecision/html/Node.html#method-updateEdges}{\code{rdecision::Node$updateEdges()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new `State` object; synonymous with a clinical outcome.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{State$new(
  name,
  cost = 0,
  utility = 1,
  interval = as.difftime(365.25, units = "days")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Character string; a label for the state.}

\item{\code{cost}}{The cost of being in the state over the interval.}

\item{\code{utility}}{the incremental utility that a user associates with
being in the health state (range -Inf to 1) for the interval.}

\item{\code{interval}}{The time interval, over which the 'cost' and
'utility' parameters apply, expressed as an R 'difftime' object;
default 1 year.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `State` object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_name"></a>}}
\if{latex}{\out{\hypertarget{method-get_name}{}}}
\subsection{Method \code{get_name()}}{
Return the label of the state; the name of the clinical outcome.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{State$get_name()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Name of the clinical outcome or state; character string.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_utility"></a>}}
\if{latex}{\out{\hypertarget{method-get_utility}{}}}
\subsection{Method \code{get_utility()}}{
Return the utility associated with the clinical outcome.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{State$get_utility()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Utility (numeric value).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{State$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}

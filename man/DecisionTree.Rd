% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DecisionTree.R
\docType{class}
\name{DecisionTree}
\alias{DecisionTree}
\title{DecisionTree}
\description{
An R6 class to represent a decision tree
}
\details{
A class to represent a decision tree. An object contains a tree of
decision nodes, chance nodes and leaf nodes, connected by edges
(either actions or reactions) and which satisfies the following
conditions:
\enumerate{
\item{Nodes and edges must form a tree with a single root and
there must be a unique path from the root to each node.
In graph theory terminology, the directed graph formed by the nodes
and edges must be an \dfn{arborescence}.}
\item{Each node must inherit from one of \code{DecisionNode},
\code{ChanceNode} or \code{LeafNode}. Formally the set of vertices
must be a disjoint union of sets of decision nodes, chance nodes
and leaf nodes.}
\item{All and only leaf nodes must have no children.}
\item{Each edge must inherit from either \code{Action} or
\code{Reaction}.}
\item{All and only edges that have source endpoints joined to 
decision nodes must inherit from \code{Action}.}
\item{All and only edges that have source endpoints joined to 
chance nodes must inherit from \code{Reaction}.}
\item{The sum of probabilities of each set of reaction edges 
with a common source endpoint must be 1.}
\item{Each \code{DecisionNode} must have a label, and the labels of all
\code{DecisionNodes} must be unique within the model.}
\item{Each \code{Action} must have a label, and the labels of  
\code{Action}s that share a common source endpoint must be unique.}
}
}
\author{
Andrew J. Sims \email{andrew.sims@newcastle.ac.uk}
}
\section{Super classes}{
\code{\link[rdecision:Graph]{rdecision::Graph}} -> \code{\link[rdecision:Digraph]{rdecision::Digraph}} -> \code{\link[rdecision:Arborescence]{rdecision::Arborescence}} -> \code{DecisionTree}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{DecisionTree$new()}}
\item \href{#method-decision_nodes}{\code{DecisionTree$decision_nodes()}}
\item \href{#method-chance_nodes}{\code{DecisionTree$chance_nodes()}}
\item \href{#method-leaf_nodes}{\code{DecisionTree$leaf_nodes()}}
\item \href{#method-actions}{\code{DecisionTree$actions()}}
\item \href{#method-modvars}{\code{DecisionTree$modvars()}}
\item \href{#method-modvar_table}{\code{DecisionTree$modvar_table()}}
\item \href{#method-paths_in_strategy}{\code{DecisionTree$paths_in_strategy()}}
\item \href{#method-strategies}{\code{DecisionTree$strategies()}}
\item \href{#method-evaluate_strategy}{\code{DecisionTree$evaluate_strategy()}}
\item \href{#method-evaluate}{\code{DecisionTree$evaluate()}}
\item \href{#method-clone}{\code{DecisionTree$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Graph" data-id="degree">}\href{../../rdecision/html/Graph.html#method-degree}{\code{rdecision::Graph$degree()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Graph" data-id="element_index">}\href{../../rdecision/html/Graph.html#method-element_index}{\code{rdecision::Graph$element_index()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Graph" data-id="has_edge">}\href{../../rdecision/html/Graph.html#method-has_edge}{\code{rdecision::Graph$has_edge()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Graph" data-id="has_element">}\href{../../rdecision/html/Graph.html#method-has_element}{\code{rdecision::Graph$has_element()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Graph" data-id="has_vertex">}\href{../../rdecision/html/Graph.html#method-has_vertex}{\code{rdecision::Graph$has_vertex()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Graph" data-id="is_simple">}\href{../../rdecision/html/Graph.html#method-is_simple}{\code{rdecision::Graph$is_simple()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Graph" data-id="neighbours">}\href{../../rdecision/html/Graph.html#method-neighbours}{\code{rdecision::Graph$neighbours()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Graph" data-id="order">}\href{../../rdecision/html/Graph.html#method-order}{\code{rdecision::Graph$order()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Graph" data-id="size">}\href{../../rdecision/html/Graph.html#method-size}{\code{rdecision::Graph$size()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Digraph" data-id="adjacency_matrix">}\href{../../rdecision/html/Digraph.html#method-adjacency_matrix}{\code{rdecision::Digraph$adjacency_matrix()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Digraph" data-id="direct_predecessors">}\href{../../rdecision/html/Digraph.html#method-direct_predecessors}{\code{rdecision::Digraph$direct_predecessors()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Digraph" data-id="direct_successors">}\href{../../rdecision/html/Digraph.html#method-direct_successors}{\code{rdecision::Digraph$direct_successors()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Digraph" data-id="incidence_matrix">}\href{../../rdecision/html/Digraph.html#method-incidence_matrix}{\code{rdecision::Digraph$incidence_matrix()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Digraph" data-id="is_acyclic">}\href{../../rdecision/html/Digraph.html#method-is_acyclic}{\code{rdecision::Digraph$is_acyclic()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Digraph" data-id="is_arborescence">}\href{../../rdecision/html/Digraph.html#method-is_arborescence}{\code{rdecision::Digraph$is_arborescence()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Digraph" data-id="is_connected">}\href{../../rdecision/html/Digraph.html#method-is_connected}{\code{rdecision::Digraph$is_connected()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Digraph" data-id="is_polytree">}\href{../../rdecision/html/Digraph.html#method-is_polytree}{\code{rdecision::Digraph$is_polytree()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Digraph" data-id="is_tree">}\href{../../rdecision/html/Digraph.html#method-is_tree}{\code{rdecision::Digraph$is_tree()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Digraph" data-id="is_weakly_connected">}\href{../../rdecision/html/Digraph.html#method-is_weakly_connected}{\code{rdecision::Digraph$is_weakly_connected()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Digraph" data-id="paths">}\href{../../rdecision/html/Digraph.html#method-paths}{\code{rdecision::Digraph$paths()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Digraph" data-id="topological_sort">}\href{../../rdecision/html/Digraph.html#method-topological_sort}{\code{rdecision::Digraph$topological_sort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Digraph" data-id="walk">}\href{../../rdecision/html/Digraph.html#method-walk}{\code{rdecision::Digraph$walk()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Arborescence" data-id="is_leaf">}\href{../../rdecision/html/Arborescence.html#method-is_leaf}{\code{rdecision::Arborescence$is_leaf()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Arborescence" data-id="is_parent">}\href{../../rdecision/html/Arborescence.html#method-is_parent}{\code{rdecision::Arborescence$is_parent()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Arborescence" data-id="root">}\href{../../rdecision/html/Arborescence.html#method-root}{\code{rdecision::Arborescence$root()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Arborescence" data-id="root_to_leaf_paths">}\href{../../rdecision/html/Arborescence.html#method-root_to_leaf_paths}{\code{rdecision::Arborescence$root_to_leaf_paths()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new decision tree. The tree must consist of a set of
nodes and a set of edges which satisfy the conditions given
in the details section of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DecisionTree$new(V, E)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{V}}{A list of nodes.}

\item{\code{E}}{A list of edges.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A DecisionTree object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-decision_nodes"></a>}}
\if{latex}{\out{\hypertarget{method-decision_nodes}{}}}
\subsection{Method \code{decision_nodes()}}{
Find the decision nodes in the tree.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DecisionTree$decision_nodes(what = "node")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{what}}{A character string defining what to return. Must be one
of "node", "label" or "index".}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of \code{DecisionNode} objects (for what="node"); a list
of character strings (for what="label"); or a list of integer indexes of 
the decision nodes (for what="index").
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-chance_nodes"></a>}}
\if{latex}{\out{\hypertarget{method-chance_nodes}{}}}
\subsection{Method \code{chance_nodes()}}{
Find the chance nodes in the tree.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DecisionTree$chance_nodes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of \code{ChanceNode} objects.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-leaf_nodes"></a>}}
\if{latex}{\out{\hypertarget{method-leaf_nodes}{}}}
\subsection{Method \code{leaf_nodes()}}{
Find the leaf nodes in the tree.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DecisionTree$leaf_nodes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of \code{LeafNode} objects.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-actions"></a>}}
\if{latex}{\out{\hypertarget{method-actions}{}}}
\subsection{Method \code{actions()}}{
Return the edges that have the specified decision node as their source.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DecisionTree$actions(d)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{d}}{A decision node.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of Action edges.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-modvars"></a>}}
\if{latex}{\out{\hypertarget{method-modvars}{}}}
\subsection{Method \code{modvars()}}{
Find all the model variables of type ModVar that have been specified
as values associated with the nodes and edges of the tree.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DecisionTree$modvars()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of \code{ModVar}s.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-modvar_table"></a>}}
\if{latex}{\out{\hypertarget{method-modvar_table}{}}}
\subsection{Method \code{modvar_table()}}{
Tabulate the model variables.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DecisionTree$modvar_table()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Data frame with one row per model variable, as follows:
\describe{
\item{Label}{The label given to the variable on creation.}
\item{Description}{As given at initialization.}
\item{Units}{Units of the variable.}
\item{Distribution}{Either the uncertainty distribution, if
it is a regular model variable, or the expression used to create it,
if it is an ExprModVar.}
\item{Mean}{Mean; calculated from means of operands if
an expression.}
\item{E}{Expectation; estimated from random sample if expression, 
mean otherwise.}
\item{SD}{Standard deviation; estimated from random sample if
expression, exact value otherwise.}
\item{Q2.5}{p=0.025 quantile; estimated from random sample if
expression, exact value otherwise.}
\item{Q97.5}{p=0.975 quantile; estimated from random sample if
expression, exact value otherwise.}
\item{Est}{TRUE if the quantiles and SD have been estimated by 
random sampling.}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-paths_in_strategy"></a>}}
\if{latex}{\out{\hypertarget{method-paths_in_strategy}{}}}
\subsection{Method \code{paths_in_strategy()}}{
Find all the root to leaf paths traversable under 
the specified strategy. A strategy is a unanimous prescription 
of an action in each decision node.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DecisionTree$paths_in_strategy(strategy)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{strategy}}{A list of Actions, with one action per decision node.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of root to leaf paths.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-strategies"></a>}}
\if{latex}{\out{\hypertarget{method-strategies}{}}}
\subsection{Method \code{strategies()}}{
Find all unique strategies for the decision tree. A
strategy is a unanimous prescription of the actions at each decision 
node. In trees where there are decision nodes that are descendants
of other decision nodes, not all decision nodes are reachable in 
each strategy. Equivalently, different strategies involve the
traversal of an identical set of paths and are considered non-
unique. Only unique strategies are returned.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DecisionTree$strategies(what = "index")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{what}}{A character string defining what to return. Must be one
of "label" or "index".}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A table (data frame) where each row is a strategy traversed by
a unique set of paths, and each column is a Decision Node. Values are
either the index of each action edge, or their label.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-evaluate_strategy"></a>}}
\if{latex}{\out{\hypertarget{method-evaluate_strategy}{}}}
\subsection{Method \code{evaluate_strategy()}}{
Evaluate the components of payoff associated with the paths in the
decision tree. For each path, the strategy, probability, cost,
benefit and utility are calculated.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DecisionTree$evaluate_strategy(strategy)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{strategy}}{A list of Actions, with one action per decision node.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data frame (payoff table) with one row per path and columns
organized as follows:
\describe{
\item{<label of decision node>}{One column for each decision node
in the mode. Each column is named with the label of the node. For each
row (path) the value is the label of the Action edge taken from the
decision node.}
\item{Leaf}{The label of the leaf node on which the pathway ends; 
normally the clinical outcome.}
\item{Probability}{The probability of traversing the pathway. The total
probability of each strategy should sum to unity.}
\item{Path.Cost}{The cost of traversing the pathway.}
\item{Path.Benefit}{The benefit derived from traversing the pathway.}
\item{Path.Utility}{The utility associated with the outcome (leaf node).}
\item{Cost}{Path.Cost \eqn{*} probability of traversing the pathway.}
\item{Benefit}{Path.Benefit \eqn{*} probability of traversing the pathway.}
\item{Utility}{Path.Utility \eqn{*} probability of traversing the pathway.}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-evaluate"></a>}}
\if{latex}{\out{\hypertarget{method-evaluate}{}}}
\subsection{Method \code{evaluate()}}{
Evaluate each strategy. Starting with the root, the function
works though all possible paths to leaf nodes and computes the probability,
cost, benefit and utility of each, then aggregates by strategy.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DecisionTree$evaluate(expected = TRUE, N = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{expected}}{If TRUE, evaluate each model variable as its mean value,
otherwise sample each one from their uncertainty distribution.}

\item{\code{N}}{Number of replicates. Intended for use with PSA (expected=F);
use with expected=T will be repetitive and uninformative.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data frame with one row per strategy per run and columns
organized as follows:
\describe{
\item{Run}{The run number}
\item{Strategy}{The strategy.}
\item{Cost}{Aggregate cost of the strategy.}
\item{Benefit}{Aggregate benefit of the strategy.}
\item{Utility}{Aggregate utility of the strategy.}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DecisionTree$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}

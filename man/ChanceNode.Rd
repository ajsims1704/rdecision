% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ChanceNode.R
\docType{class}
\name{ChanceNode}
\alias{ChanceNode}
\title{ChanceNode}
\description{
An R6 class to represent a chance node in a decision tree.
}
\details{
An R6 class to represent a chance node in a decision tree. 
The node is associated with at least two branches to other nodes, each 
of which has a conditional probability (the probability of following
that branch given that the node has been reached) and a cost.
}
\author{
Andrew Sims \email{andrew.sims5@nhs.net}
}
\section{Super class}{
\code{\link[rdecision:Node]{rdecision::Node}} -> \code{ChanceNode}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ChanceNode$new()}}
\item \href{#method-getModelVariables}{\code{ChanceNode$getModelVariables()}}
\item \href{#method-sampleModelVariables}{\code{ChanceNode$sampleModelVariables()}}
\item \href{#method-updateEdges}{\code{ChanceNode$updateEdges()}}
\item \href{#method-clone}{\code{ChanceNode$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="childNodes">}\href{../../rdecision/html/Node.html#method-childNodes}{\code{rdecision::Node$childNodes()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="descendantNodes">}\href{../../rdecision/html/Node.html#method-descendantNodes}{\code{rdecision::Node$descendantNodes()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="getCost">}\href{../../rdecision/html/Node.html#method-getCost}{\code{rdecision::Node$getCost()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="getLabel">}\href{../../rdecision/html/Node.html#method-getLabel}{\code{rdecision::Node$getLabel()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="getP">}\href{../../rdecision/html/Node.html#method-getP}{\code{rdecision::Node$getP()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="getPathways">}\href{../../rdecision/html/Node.html#method-getPathways}{\code{rdecision::Node$getPathways()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="getUtility">}\href{../../rdecision/html/Node.html#method-getUtility}{\code{rdecision::Node$getUtility()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="hasChildNodes">}\href{../../rdecision/html/Node.html#method-hasChildNodes}{\code{rdecision::Node$hasChildNodes()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="isSameNode">}\href{../../rdecision/html/Node.html#method-isSameNode}{\code{rdecision::Node$isSameNode()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="nodeType">}\href{../../rdecision/html/Node.html#method-nodeType}{\code{rdecision::Node$nodeType()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rdecision" data-topic="Node" data-id="tabulateModelVariables">}\href{../../rdecision/html/Node.html#method-tabulateModelVariables}{\code{rdecision::Node$tabulateModelVariables()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new ChanceNode object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChanceNode$new(children, edgelabels, costs, p, ptype = "numeric")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{children}}{a list of \eqn{k \ge 2} Nodes which will be the children
of this node.}

\item{\code{edgelabels}}{a list of \eqn{k} character strings to label each edge 
(branch) leaving the `ChanceNode`, given in the same order as
`children`.}

\item{\code{costs}}{A list of \eqn{k} costs associated with each edge (branch) 
leaving the `ChanceNode`. Each element may be of type `numeric` or
`ModelVariable`; given in the same order as `children`.}

\item{\code{p}}{a list of probabilities associated with \eqn{k} branches.
       There are four possible configurations of the list 
       based on the \code{ptype} argument.
\describe{
\item{'numeric'}{\eqn{k} numeric values; the simplest case in which the   
          probabilities are certain. Supplied values should add
          to unity and be given in the same order as `children`.}
\item{'MV'}{\eqn{k-1} `ModelVariable`s or `numeric` elements and
      a single `numeric(NA)`, give in the same order as `children`. The 
      single NA will be replaced on evaluation of the model variable
      expressions by a value to ensure the sum of probabilities
      is unity. This option is not recommended, because there is
      a chance that during sampling, individual branch probabilities
      may be less than zero, or that the sum of the sampled model variable
      expressions may exceed 1.}
\item{'Beta'}{One `BetaModelVariable` and one NA. Used for \eqn{k=2}. The 
      element defined as NA will be replaced by one minus the sampled 
      value of the supplied beta distribution.}
\item{'Dirichlet'}{One DirichletModelVariable, with \eqn{k} parameters,
      given in the same order as `children`.}
}}

\item{\code{ptype}}{a character string taking one of four possible
values to define how the \code{p} argument is defined:
'numeric', 'MVE', 'Beta' or 'Dirichlet'.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `ChanceNode` object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getModelVariables"></a>}}
\if{latex}{\out{\hypertarget{method-getModelVariables}{}}}
\subsection{Method \code{getModelVariables()}}{
Return the list of model variables associated with the node. The
model variables may be associated with costs or probabilities.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChanceNode$getModelVariables()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List of model variables.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-sampleModelVariables"></a>}}
\if{latex}{\out{\hypertarget{method-sampleModelVariables}{}}}
\subsection{Method \code{sampleModelVariables()}}{
Sample all model variables in this node and update edges.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChanceNode$sampleModelVariables(expected = F)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{expected}}{If TRUE cause each model variable to return its expected
value at the next call to `value()`. If FALSE each model variable
will return the sampled value. Default is FALSE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An updated ChanceNode object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-updateEdges"></a>}}
\if{latex}{\out{\hypertarget{method-updateEdges}{}}}
\subsection{Method \code{updateEdges()}}{
Update numerical values in edges.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChanceNode$updateEdges()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
An updated object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChanceNode$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
